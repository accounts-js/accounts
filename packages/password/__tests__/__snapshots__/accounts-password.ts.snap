// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountsPassword addEmail call this.db.addEmail 1`] = `
Array [
  "id",
  "email",
  true,
]
`;

exports[`AccountsPassword authenticate throws on incorrect password 1`] = `"Incorrect password"`;

exports[`AccountsPassword authenticate throws on invalid params 1`] = `"Unrecognized options for login request"`;

exports[`AccountsPassword authenticate throws on invalid type params 1`] = `"Match failed"`;

exports[`AccountsPassword authenticate throws when hash not found 1`] = `"User has no password set"`;

exports[`AccountsPassword authenticate throws when user not found 1`] = `"User not found"`;

exports[`AccountsPassword createUser throws on required fields 1`] = `"Username or Email is required"`;

exports[`AccountsPassword createUser throws when email already exists 1`] = `"Email already exists"`;

exports[`AccountsPassword createUser throws when username already exists 1`] = `"Username already exists"`;

exports[`AccountsPassword findUserByEmail call this.db.findUserByEmail 1`] = `
Array [
  "email",
]
`;

exports[`AccountsPassword findUserByUsername call this.db.findUserByUsername 1`] = `
Array [
  "email",
]
`;

exports[`AccountsPassword removeEmail call this.db.removeEmail 1`] = `
Array [
  "id",
  "email",
]
`;

exports[`AccountsPassword resetPassword reset password and invalidate all sessions 1`] = `
Array [
  "id",
]
`;

exports[`AccountsPassword resetPassword throws when token have invalid email 1`] = `"Token has invalid email address"`;

exports[`AccountsPassword resetPassword throws when token is expired 1`] = `"Reset password link expired"`;

exports[`AccountsPassword resetPassword throws when token not found 1`] = `"Reset password link expired"`;

exports[`AccountsPassword resetPassword validate user email if enrolled 1`] = `
Array [
  "id",
]
`;

exports[`AccountsPassword sendEnrollmentEmail throws if user is not found 1`] = `"User not found"`;

exports[`AccountsPassword sendResetPasswordEmail throws if email is empty 1`] = `"Invalid email"`;

exports[`AccountsPassword sendResetPasswordEmail throws if user is not found 1`] = `"User not found"`;

exports[`AccountsPassword sendVerificationEmail throws if email is empty 1`] = `"Invalid email"`;

exports[`AccountsPassword sendVerificationEmail throws if user is not found 1`] = `"User not found"`;

exports[`AccountsPassword sendVerificationEmail throws when invalid address 1`] = `"No such email address for user"`;

exports[`AccountsPassword verifyEmail call this.db.verifyEmail 1`] = `
Array [
  undefined,
  "john.doe@gmail.com",
]
`;

exports[`AccountsPassword verifyEmail throws when email not found 1`] = `"Verify email link is for unknown address"`;

exports[`AccountsPassword verifyEmail throws when no user is found 1`] = `"Verify email link expired"`;

exports[`AccountsPassword verifyEmail throws when token not found 1`] = `"Verify email link expired"`;
